<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysUserMapper">
    <resultMap type="com.ruoyi.common.core.domain.entity.SysUser" id="BaseUserResult">
        <id property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="nickName" column="nick_name"/>
        <result property="email" column="email"/>
        <result property="phonenumber" column="phonenumber"/>
        <result property="sex" column="sex"/>
        <result property="avatar" column="avatar"/>
        <result property="password" column="password"/>
        <result property="status" column="status"/>
        <result property="openId" column="open_id"/>
        <result property="waterNum" column="water_num"/>
        <result property="addressId" column="address"/>
        <result property="dormType" column="dorm_type"/>
        <result property="homeId" column="home_id"/>
        <result property="barrelNumber" column="barrel_number"/>
        <result property="delFlag" column="del_flag"/>
        <result property="loginIp" column="login_ip"/>
        <result property="loginDate" column="login_date"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <resultMap type="com.ruoyi.common.core.domain.entity.SysUser" id="SysUserResult" extends="BaseUserResult">
        <collection property="roles" javaType="java.util.List" resultMap="RoleResult"/>
    </resultMap>

    <resultMap type="com.ruoyi.system.response.UserResponse" id="sysUserResponse" extends="BaseUserResult">
        <result property="homeName" column="home_name"/>
        <collection property="roles" javaType="java.util.List" resultMap="RoleResult"/>
    </resultMap>

    <resultMap id="RoleResult" type="com.ruoyi.common.core.domain.entity.SysRole">
        <id property="roleId" column="role_id"/>
        <result property="roleName" column="role_name"/>
        <result property="roleKey" column="role_key"/>
        <result property="roleSort" column="role_sort"/>
        <result property="dataScope" column="data_scope"/>
        <result property="status" column="role_status"/>
    </resultMap>


    <sql id="selectUserVo">
        select u.user_id,
               u.user_name,
               u.nick_name,
               u.email,
               u.avatar,
               u.phonenumber,
               u.password,
               u.sex,
               u.open_id,
               u.water_num,
               u.address,
               u.dorm_type,
               u.home_id,
               u.barrel_number,
               u.status,
               u.del_flag,
               u.login_ip,
               u.login_date,
               u.create_by,
               u.create_time,
               u.update_by,
               u.update_time,
               u.remark,
               r.role_id,
               r.role_name,
               r.role_key,
               r.role_sort,
               r.status as role_status
        from sys_user u
                 left join sys_user_role ur on u.user_id = ur.user_id
                 left join sys_role r on r.role_id = ur.role_id
    </sql>

    <sql id="userSelf">
        select u.user_id,
               u.user_name,
               u.nick_name,
               u.email,
               u.avatar,
               u.phonenumber,
               u.password,
               u.sex,
               u.open_id,
               u.water_num,
               u.address,
               u.dorm_type,
               u.home_id,
               u.barrel_number,
               u.status,
               u.del_flag,
               u.login_ip,
               u.login_date,
               u.create_by,
               u.create_time,
               u.update_by,
               u.update_time,
               u.remark
        from sys_user u
    </sql>

    <select id="selectUserList" parameterType="com.ruoyi.system.request.UserRequest" resultMap="sysUserResponse">
        select u.user_id,
               u.user_name,
               u.nick_name,
               u.email,
               u.avatar,
               u.phonenumber,
               u.password,
               u.sex,
               u.open_id,
               u.water_num,
               u.address,
               u.dorm_type,
               u.home_id,
               u.barrel_number,
               u.status,
               u.del_flag,
               u.login_ip,
               u.login_date,
               u.create_by,
               u.create_time,
               u.update_by,
               u.update_time,
               u.remark,
               r.role_id,
               r.role_name,
               r.role_key,
               r.role_sort,
               r.status as role_status,
               h.name   as home_name
        from sys_user u
                 left join sys_user_role ur on u.user_id = ur.user_id
                 left join sys_role r on r.role_id = ur.role_id
                 left join ft_home h on u.home_id = h.id
        where u.del_flag = '0'
        <if test="userId != null and userId != 0">
            AND u.user_id = #{userId}
        </if>
        <if test="userName != null and userName != ''">
            AND u.user_name like concat('%', #{userName}, '%')
        </if>
        <if test="nickName != null and nickName != ''">
            AND u.nick_name like concat('%', #{nickName}, '%')
        </if>
        <if test="status != null and status != ''">
            AND u.status = #{status}
        </if>
        <if test="phonenumber != null and phonenumber != ''">
            AND u.phonenumber like concat('%', #{phonenumber}, '%')
        </if>
        <if test="params.beginTime != null and params.beginTime != ''">
            <!-- 开始时间检索 -->
            AND date_format(u.create_time, '%y%m%d') &gt;= date_format(#{params.beginTime}, '%y%m%d')
        </if>
        <if test="params.endTime != null and params.endTime != ''">
            <!-- 结束时间检索 -->
            AND date_format(u.create_time, '%y%m%d') &lt;= date_format(#{params.endTime}, '%y%m%d')
        </if>
        <if test="type != null and type == 'true'">
            and r.role_id = 2
        </if>
        <if test="type != null and type == 'false'">
            and r.role_id != 2
        </if>
        order by u.user_id desc
    </select>

    <select id="selectAllocatedList" parameterType="com.ruoyi.common.core.domain.entity.SysUser"
            resultMap="SysUserResult">
        select distinct u.user_id,
                        u.dept_id,
                        u.user_name,
                        u.nick_name,
                        u.email,
                        u.phonenumber,
                        u.status,
                        u.create_time
        from sys_user u
                 left join sys_dept d on u.dept_id = d.dept_id
                 left join sys_user_role ur on u.user_id = ur.user_id
                 left join sys_role r on r.role_id = ur.role_id
        where u.del_flag = '0'
          and r.role_id = #{roleId}
        <if test="userName != null and userName != ''">
            AND u.user_name like concat('%', #{userName}, '%')
        </if>
        <if test="phonenumber != null and phonenumber != ''">
            AND u.phonenumber like concat('%', #{phonenumber}, '%')
        </if>
    </select>

    <select id="selectUnallocatedList" parameterType="com.ruoyi.common.core.domain.entity.SysUser"
            resultMap="SysUserResult">
        select distinct u.user_id,
                        u.dept_id,
                        u.user_name,
                        u.nick_name,
                        u.email,
                        u.phonenumber,
                        u.status,
                        u.create_time
        from sys_user u
                 left join sys_dept d on u.dept_id = d.dept_id
                 left join sys_user_role ur on u.user_id = ur.user_id
                 left join sys_role r on r.role_id = ur.role_id
        where u.del_flag = '0'
          and (r.role_id != #{roleId} or r.role_id IS NULL)
          and u.user_id not in (select u.user_id
                                from sys_user u
                                         inner join sys_user_role ur on u.user_id = ur.user_id and ur.role_id = #{roleId})
        <if test="userName != null and userName != ''">
            AND u.user_name like concat('%', #{userName}, '%')
        </if>
        <if test="phonenumber != null and phonenumber != ''">
            AND u.phonenumber like concat('%', #{phonenumber}, '%')
        </if>
    </select>

    <select id="selectUserByUserName" parameterType="String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.user_name = #{userName}
          and u.del_flag = '0'
    </select>

    <select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.user_id = #{userId}
    </select>

    <select id="checkUserNameUnique" parameterType="String" resultMap="SysUserResult">
        select user_id, user_name
        from sys_user
        where user_name = #{userName}
          and del_flag = '0' limit 1
    </select>

    <select id="checkPhoneUnique" parameterType="String" resultMap="SysUserResult">
        select user_id, phonenumber
        from sys_user
        where phonenumber = #{phonenumber}
          and del_flag = '0' limit 1
    </select>

    <select id="checkEmailUnique" parameterType="String" resultMap="SysUserResult">
        select user_id, email
        from sys_user
        where email = #{email}
          and del_flag = '0' limit 1
    </select>

    <insert id="insertUser" parameterType="com.ruoyi.common.core.domain.entity.SysUser" useGeneratedKeys="true"
            keyProperty="userId">
        insert into sys_user(
        <if test="userId != null and userId != 0">
            user_id,
        </if>
        <if test="userName != null and userName != ''">
            user_name,
        </if>
        <if test="nickName != null and nickName != ''">
            nick_name,
        </if>
        <if test="email != null and email != ''">
            email,
        </if>
        <if test="avatar != null and avatar != ''">
            avatar,
        </if>
        <if test="phonenumber != null and phonenumber != ''">
            phonenumber,
        </if>
        <if test="sex != null and sex != ''">
            sex,
        </if>
        <if test="password != null and password != ''">
            password,
        </if>
        <if test="status != null and status != ''">
            status,
        </if>
        <if test="createBy != null and createBy != ''">
            create_by,
        </if>
        <if test="remark != null and remark != ''">
            remark,
        </if>
        <if test="openId != null and openId != ''">
            open_id,
        </if>
        <if test="waterNum != null">
            water_num,
        </if>
        <if test="dormType != null">
            dorm_type,
        </if>
        <if test="addressId != null">
            address,
        </if>
        <if test="homeId != null">
            home_id,
        </if>
        create_time)
        values
        (
        <if test="userId != null and userId != ''">
            #{userId},
        </if>
        <if test="userName != null and userName != ''">
            #{userName},
        </if>
        <if test="nickName != null and nickName != ''">
            #{nickName},
        </if>
        <if test="email != null and email != ''">
            #{email},
        </if>
        <if test="avatar != null and avatar != ''">
            #{avatar},
        </if>
        <if test="phonenumber != null and phonenumber != ''">
            #{phonenumber},
        </if>
        <if test="sex != null and sex != ''">
            #{sex},
        </if>
        <if test="password != null and password != ''">
            #{password},
        </if>
        <if test="status != null and status != ''">
            #{status},
        </if>
        <if test="createBy != null and createBy != ''">
            #{createBy},
        </if>
        <if test="remark != null and remark != ''">
            #{remark},
        </if>
        <if test="openId != null and openId != ''">
            #{openId},
        </if>
        <if test="waterNum != null">
            #{waterNum},
        </if>
        <if test="dormType != null">
            #{dormType},
        </if>
        <if test="addressId != null">
            #{addressId},
        </if>
        <if test="homeId != null">
            #{homeId},
        </if>
        sysdate())
    </insert>

    <update id="updateUser" parameterType="com.ruoyi.common.core.domain.entity.SysUser">
        update sys_user
        <set>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="nickName != null and nickName != ''">
                nick_name = #{nickName},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="phonenumber != null">
                phonenumber = #{phonenumber},
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex},
            </if>
            <if test="avatar != null and avatar != ''">
                avatar = #{avatar},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            <if test="loginIp != null and loginIp != ''">
                login_ip = #{loginIp},
            </if>
            <if test="loginDate != null">
                login_date = #{loginDate},
            </if>
            <if test="updateBy != null and updateBy != ''">
                update_by = #{updateBy},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
            <if test="openId != null and openId != ''">
                open_id = #{openId},
            </if>
            <if test="waterNum != null">
                water_num = #{waterNum},
            </if>
            <if test="dormType != null">
                dorm_type = #{dormType},
            </if>
            <if test="addressId != null">
                address = #{addressId},
            </if>
            <if test="homeId != null">
                home_id = #{homeId},
            </if>
            update_time = sysdate()
        </set>
        where user_id = #{userId}
    </update>

    <update id="updateUserStatus" parameterType="com.ruoyi.common.core.domain.entity.SysUser">
        update sys_user
        set status = #{status}
        where user_id = #{userId}
    </update>

    <update id="updateUserAvatar" parameterType="com.ruoyi.common.core.domain.entity.SysUser">
        update sys_user
        set avatar = #{avatar}
        where user_name = #{userName}
    </update>

    <update id="resetUserPwd" parameterType="com.ruoyi.common.core.domain.entity.SysUser">
        update sys_user
        set password = #{password}
        where user_name = #{userName}
    </update>

    <delete id="deleteUserById" parameterType="Long">
        update sys_user
        set del_flag = '2'
        where user_id = #{userId}
    </delete>

    <delete id="deleteUserByIds" parameterType="Long">
        update sys_user
        set del_flag = '2' where user_id in
        <foreach collection="array" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

    <update id="updatePasswordByPhone">
        update sys_user
        set password = #{password}
        where phonenumber = #{phone}
    </update>

    <select id="getUserByPhone" resultMap="SysUserResult">
        <include refid="userSelf"/>
        where phonenumber = #{phone}
          and del_flag = '0'
    </select>

    <update id="updateOpenIdByPhone">
        update sys_user
        set open_id = #{openId}
        where phone = #{phone}
    </update>

    <update id="updatePhoneById">
        update sys_user
        set phone = #{phonenumber}
        where user_id = #{userId}
    </update>

    <select id="getUserByOpenId" resultMap="SysUserResult">
        <include refid="userSelf"/>
        where open_id = #{openId}
          and del_flag = '0'
    </select>

    <select id="getUsersFindByRoleId" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where r.role_id = #{roleId}
    </select>

    <select id="getUserByHomeIdAndRoleId" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.home_id = #{homeId}
          and u.del_flag = '0'
          and r.role_id = #{roleId}
    </select>

    <select id="getUsersFindByRoleIdAndUserId" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where r.role_id = #{roleId}
          and u.user_id = #{userId}
          and u.del_flag = '0'
    </select>

    <select id="search" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.phonenumber like concat('%', #{keyword}, '%')
          and u.del_flag = '0'
    </select>

    <update id="updateDefaultAddressById">
        update sys_user
        set address = #{id}
        where user_id = #{userId}
    </update>

    <select id="selectUserByIds" resultMap="BaseUserResult">
        <include refid="userSelf"/>
        where u.user_id in
        <foreach collection="userIds" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </select>

    <update id="updateWaterNumberById">
        update sys_user
        set water_num = #{number}
        where user_id = #{id}
    </update>

    <update id="updateBarrelNumberById">
        update sys_user
        set barrel_number = #{number}
        where user_id = #{id}
    </update>

    <select id="selectUsersByIds" resultMap="BaseUserResult">
        select user_id,
               user_name
        from sys_user
        where user_id in
        <foreach collection="ids" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </select>
</mapper>